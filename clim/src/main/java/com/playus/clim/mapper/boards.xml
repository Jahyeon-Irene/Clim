<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boards">
	<select id="myWriteBoardsList" resultType="Board"
		parameterType="PageVO">
		SELECT no, contents, memberNo, views, regdate, r
		FROM(SELECT no, contents, memberNo, views, regdate, rownum r
		FROM(SELECT no, contents, member_no memberNo, views, regdate
		FROM boards
		WHERE member_no = #{no}
		ORDER BY regdate DESC))
		WHERE r BETWEEN #{start} AND #{end}
	</select>
	
	<select id="myWriteBoardsTotal" resultType="int"
		parameterType="int">
		SELECT count(*)
		FROM boards
		WHERE member_no = #{memberNo}
	</select>

	<select id="boardList" resultType="Board" parameterType="PageVO">
		SELECT
		no, contents, nickname ,memberNo, views, regdate, commentCount,
		likeCount, r
		FROM(SELECT no, contents, nickname, member_no memberNo,
		views, regdate, commentCount, likeCount, rownum r
		FROM(SELECT b.no, contents, nickname, b.member_no, views, b.regdate, NVL(c.cnt,0)
		commentCount, NVL(l.cnt,0) likeCount
		FROM boards b, members m,
		(SELECT board_no, COUNT(board_no) cnt
		FROM comments
		GROUP BY board_no) c,
		(SELECT post_no, COUNT(post_no) cnt
		FROM likes
		WHERE type = 'B'
		GROUP BY post_no) l
		WHERE b.member_no = m.no
		AND c.board_no(+) = b.no
		AND l.post_no(+) = b.no
		ORDER BY regdate DESC))
		WHERE r BETWEEN #{start} AND #{end}
	</select>

	<select id="boardTotal" resultType="int">
		select count(*) boardCount
		from boards
	</select>

	<select id="boardDetail" parameterType="int" resultType="Board">
		select
		no, contents, memberNo, nickname, views, regdate, likeCount,
		commentCount
		from (select b.no, b.contents, m.no memberNo, m.nickname,
		views, b.regdate regdate, NVL(l.likeCount,0) likeCount,
		NVL(c.commentCount,0) commentCount
		from boards b, members m,
		(select post_no, count(*) likeCount
		from likes
		where type = 'B'
		group by
		post_no) l,
		(select post_no, count(*) commentCount
		from likes
		where type
		= 'C'
		group by post_no) c
		where m.no = b.member_no AND l.post_no =
		c.post_no(+) AND b.no = l.post_no(+))
		where no = #{no}
	</select>

	<delete id="deleteBoard" parameterType="Board">
		delete
		from boards
		where no = #{no}
	</delete>

	<insert id="writeBoard" parameterType="Board">
		<selectKey order="BEFORE" keyProperty="no" resultType="int">
			SELECT boards_seq.nextval
			FROM dual
		</selectKey>
		insert into boards(no, contents, member_no, views, regdate)
		values(#{no}, #{contents}, #{memberNo}, 0, systimestamp)
	</insert>

	<select id="searchBoard" parameterType="String"
		resultType="Board">
		SELECT no, contents, nickname, member_no memberNo, views, regdate,
		commentCount, likeCount
		FROM(SELECT b.no, contents, nickname, b.member_no, views, b.regdate, NVL(c.cnt,0)
		commentCount, NVL(l.cnt,0) likeCount
		FROM boards b, members m,
		(SELECT board_no, COUNT(board_no) cnt
		FROM comments
		GROUP BY board_no) c,
		(SELECT post_no, COUNT(post_no) cnt
		FROM likes
		WHERE type = 'B'
		GROUP BY post_no) l
		WHERE b.member_no = m.no
		AND c.board_no(+) = b.no
		AND l.post_no(+) = b.no
		ORDER BY regdate DESC)
		where contents like #{contents}
	</select>

	<update id="boardUpdate" parameterType="Board">
		update boards
		set contents = #{contents}
		where no = #{no}
	</update>

	<update id="boardViewUpdate" parameterType="Board">
		update boards
		set views = #{views}
		where no = #{no}
	</update>

</mapper>